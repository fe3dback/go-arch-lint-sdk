This file is autogenerated at 2024-08-20 22:29:59
Do not edit it manually.

models.Config{
 SyntaxProblems: arch.RefSlice[string](nil),
 Version: arch.Ref[arch.ConfigVersion]{
  Value: 3,
  Ref: arch.Reference{
   File: "/conf.yml",
   Line: 1,
   Column: 10,
   XPath: "$.version",
   Valid: true,
  },
 },
 WorkingDirectory: arch.Ref[arch.PathRelative]{
  Value: "internal",
  Ref: arch.Reference{
   File: "/conf.yml",
   Line: 2,
   Column: 10,
   XPath: "$.workdir",
   Valid: true,
  },
 },
 Settings: models.ConfigSettings{
  DeepScan: arch.Ref[bool]{
   Value: false,
   Ref: arch.Reference{
    File: "",
    Line: 0,
    Column: 0,
    XPath: "",
    Valid: false,
   },
  },
  Imports: models.ConfigSettingsImports{
   StrictMode: arch.Ref[bool]{
    Value: false,
    Ref: arch.Reference{
     File: "",
     Line: 0,
     Column: 0,
     XPath: "",
     Valid: false,
    },
   },
   AllowAnyVendorImports: arch.Ref[bool]{
    Value: false,
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 4,
     Column: 19,
     XPath: "$.allow.depOnAnyVendor",
     Valid: true,
    },
   },
  },
  Tags: models.ConfigSettingsTags{
   Allowed: arch.Ref[arch.ConfigSettingsTagsEnum]{
    Value: "All",
    Ref: arch.Reference{
     File: "",
     Line: 0,
     Column: 0,
     XPath: "",
     Valid: false,
    },
   },
   AllowedList: arch.RefSlice[arch.StructTag](nil),
  },
 },
 Exclude: models.ConfigExclude{
  RelativeDirectories: arch.RefSlice[arch.PathRelative]{
   {
    Value: "someDir",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 7,
     Column: 3,
     XPath: "$.exclude",
     Valid: true,
    },
   },
  },
  RelativeFiles: arch.RefSlice[arch.PathRelativeRegExp]{
   {
    Value: "^.*_test\\.go$",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 10,
     Column: 5,
     XPath: "$.excludeFiles[0]",
     Valid: true,
    },
   },
   {
    Value: "^.*\\/test\\/.*$",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 11,
     Column: 5,
     XPath: "$.excludeFiles[1]",
     Valid: true,
    },
   },
  },
 },
 Components: models.ConfigComponents{
  Map: arch.RefMap[arch.ComponentName,internal/models.ConfigComponent]{
   values: map[arch.ComponentName]models.ConfigComponent{
    "container": {
     In: arch.RefSlice[arch.PathRelativeGlob]{
      {
       Value: "app/internal/container/**",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 24,
        Column: 30,
        XPath: "$.components.container.in",
        Valid: true,
       },
      },
     },
    },
    "main": {
     In: arch.RefSlice[arch.PathRelativeGlob]{
      {
       Value: "app",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 23,
        Column: 32,
        XPath: "$.components.main.in[0]",
        Valid: true,
       },
      },
      {
       Value: "ppa",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 23,
        Column: 38,
        XPath: "$.components.main.in[1]",
        Valid: true,
       },
      },
     },
    },
   },
   refs: map[arch.ComponentName]arch.Reference{
    "container": {
     File: "/conf.yml",
     Line: 24,
     Column: 24,
     XPath: "$.components.container",
     Valid: true,
    },
    "main": {
     File: "/conf.yml",
     Line: 23,
     Column: 24,
     XPath: "$.components.main",
     Valid: true,
    },
   },
  },
 },
 Vendors: models.ConfigVendors{
  Map: arch.RefMap[arch.VendorName,internal/models.ConfigVendor]{
   values: map[arch.VendorName]models.ConfigVendor{
    "3rd-yaml": {
     In: arch.RefSlice[arch.PathImportGlob]{
      {
       Value: "github.com/goccy/go-yaml",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 18,
        Column: 9,
        XPath: "$.vendors.3rd-yaml.in[0]",
        Valid: true,
       },
      },
      {
       Value: "github.com/goccy/go-yaml/**",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 19,
        Column: 9,
        XPath: "$.vendors.3rd-yaml.in[1]",
        Valid: true,
       },
      },
      {
       Value: "github.com/fe3dback/go-yaml",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 20,
        Column: 9,
        XPath: "$.vendors.3rd-yaml.in[2]",
        Valid: true,
       },
      },
     },
    },
    "go-ast": {
     In: arch.RefSlice[arch.PathImportGlob]{
      {
       Value: "golang.org/x/mod/modfile",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 15,
        Column: 32,
        XPath: "$.vendors.go-ast.in[0]",
        Valid: true,
       },
      },
      {
       Value: "golang.org/x/tools/go/packages",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 15,
        Column: 58,
        XPath: "$.vendors.go-ast.in[1]",
        Valid: true,
       },
      },
     },
    },
    "go-common": {
     In: arch.RefSlice[arch.PathImportGlob]{
      {
       Value: "golang.org/x/sync/errgroup",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 14,
        Column: 30,
        XPath: "$.vendors.go-common.in",
        Valid: true,
       },
      },
     },
    },
   },
   refs: map[arch.VendorName]arch.Reference{
    "3rd-yaml": {
     File: "/conf.yml",
     Line: 17,
     Column: 7,
     XPath: "$.vendors.3rd-yaml",
     Valid: true,
    },
    "go-ast": {
     File: "/conf.yml",
     Line: 15,
     Column: 24,
     XPath: "$.vendors.go-ast",
     Valid: true,
    },
    "go-common": {
     File: "/conf.yml",
     Line: 14,
     Column: 24,
     XPath: "$.vendors.go-common",
     Valid: true,
    },
   },
  },
 },
 CommonComponents: arch.RefSlice[arch.ComponentName]{
  {
   Value: "models",
   Ref: arch.Reference{
    File: "/conf.yml",
    Line: 30,
    Column: 5,
    XPath: "$.commonComponents[0]",
    Valid: true,
   },
  },
  {
   Value: "3rd-yaml",
   Ref: arch.Reference{
    File: "/conf.yml",
    Line: 31,
    Column: 5,
    XPath: "$.commonComponents[1]",
    Valid: true,
   },
  },
 },
 CommonVendors: arch.RefSlice[arch.VendorName]{
  {
   Value: "go-common",
   Ref: arch.Reference{
    File: "/conf.yml",
    Line: 27,
    Column: 3,
    XPath: "$.commonVendors",
    Valid: true,
   },
  },
 },
 Dependencies: models.ConfigDependencies{
  Map: arch.RefMap[arch.ComponentName,internal/models.ConfigComponentDependencies]{
   values: map[arch.ComponentName]models.ConfigComponentDependencies{
    "container": {
     MayDependOn: arch.RefSlice[arch.ComponentName]{
     },
     CanUse: arch.RefSlice[arch.VendorName]{
     },
     AnyVendorDeps: arch.Ref[bool]{
      Value: true,
      Ref: arch.Reference{
       File: "/conf.yml",
       Line: 39,
       Column: 20,
       XPath: "$.deps.container.anyVendorDeps",
       Valid: true,
      },
     },
     AnyProjectDeps: arch.Ref[bool]{
      Value: true,
      Ref: arch.Reference{
       File: "/conf.yml",
       Line: 40,
       Column: 21,
       XPath: "$.deps.container.anyProjectDeps",
       Valid: true,
      },
     },
     CanContainTags: arch.RefSlice[arch.StructTag]{
     },
     DeepScan: models.ConfigOptional[arch.Ref[bool]]{
      Value: arch.Ref[bool]{
       Value: false,
       Ref: arch.Reference{
        File: "",
        Line: 0,
        Column: 0,
        XPath: "",
        Valid: false,
       },
      },
      Defined: false,
     },
    },
    "main": {
     MayDependOn: arch.RefSlice[arch.ComponentName]{
      {
       Value: "container",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 36,
        Column: 7,
        XPath: "$.deps.main.mayDependOn",
        Valid: true,
       },
      },
     },
     CanUse: arch.RefSlice[arch.VendorName]{
     },
     AnyVendorDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     AnyProjectDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     CanContainTags: arch.RefSlice[arch.StructTag]{
     },
     DeepScan: models.ConfigOptional[arch.Ref[bool]]{
      Value: arch.Ref[bool]{
       Value: false,
       Ref: arch.Reference{
        File: "",
        Line: 0,
        Column: 0,
        XPath: "",
        Valid: false,
       },
      },
      Defined: false,
     },
    },
    "operations": {
     MayDependOn: arch.RefSlice[arch.ComponentName]{
      {
       Value: "services",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 45,
        Column: 7,
        XPath: "$.deps.operations.mayDependOn",
        Valid: true,
       },
      },
     },
     CanUse: arch.RefSlice[arch.VendorName]{
      {
       Value: "3rd-graph",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 47,
        Column: 7,
        XPath: "$.deps.operations.canUse",
        Valid: true,
       },
      },
     },
     AnyVendorDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     AnyProjectDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     CanContainTags: arch.RefSlice[arch.StructTag]{
     },
     DeepScan: models.ConfigOptional[arch.Ref[bool]]{
      Value: arch.Ref[bool]{
       Value: true,
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 43,
        Column: 15,
        XPath: "$.deps.operations.deepScan",
        Valid: true,
       },
      },
      Defined: true,
     },
    },
   },
   refs: map[arch.ComponentName]arch.Reference{
    "container": {
     File: "/conf.yml",
     Line: 39,
     Column: 18,
     XPath: "$.deps.container",
     Valid: true,
    },
    "main": {
     File: "/conf.yml",
     Line: 35,
     Column: 16,
     XPath: "$.deps.main",
     Valid: true,
    },
    "operations": {
     File: "/conf.yml",
     Line: 43,
     Column: 13,
     XPath: "$.deps.operations",
     Valid: true,
    },
   },
  },
 },
}
