This file is autogenerated at 2024-08-20 22:29:59
Do not edit it manually.

models.Config{
 SyntaxProblems: arch.RefSlice[string](nil),
 Version: arch.Ref[arch.ConfigVersion]{
  Value: 4,
  Ref: arch.Reference{
   File: "/conf.yml",
   Line: 1,
   Column: 10,
   XPath: "$.version",
   Valid: true,
  },
 },
 WorkingDirectory: arch.Ref[arch.PathRelative]{
  Value: "internal",
  Ref: arch.Reference{
   File: "/conf.yml",
   Line: 3,
   Column: 19,
   XPath: "$.workingDirectory",
   Valid: true,
  },
 },
 Settings: models.ConfigSettings{
  DeepScan: arch.Ref[bool]{
   Value: true,
   Ref: arch.Reference{
    File: "",
    Line: 0,
    Column: 0,
    XPath: "",
    Valid: false,
   },
  },
  Imports: models.ConfigSettingsImports{
   StrictMode: arch.Ref[bool]{
    Value: false,
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 7,
     Column: 17,
     XPath: "$.settings.imports.strictMode",
     Valid: true,
    },
   },
   AllowAnyVendorImports: arch.Ref[bool]{
    Value: true,
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 8,
     Column: 28,
     XPath: "$.settings.imports.allowAnyVendorImports",
     Valid: true,
    },
   },
  },
  Tags: models.ConfigSettingsTags{
   Allowed: arch.Ref[arch.ConfigSettingsTagsEnum]{
    Value: "All",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 10,
     Column: 14,
     XPath: "$.settings.structTags.allowed",
     Valid: true,
    },
   },
   AllowedList: arch.RefSlice[arch.StructTag](nil),
  },
 },
 Exclude: models.ConfigExclude{
  RelativeDirectories: arch.RefSlice[arch.PathRelative]{
   {
    Value: "view/testcases",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 14,
     Column: 5,
     XPath: "$.exclude.directories",
     Valid: true,
    },
   },
  },
  RelativeFiles: arch.RefSlice[arch.PathRelativeRegExp]{
   {
    Value: "^.*_test\\.go$",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 17,
     Column: 7,
     XPath: "$.exclude.files[0]",
     Valid: true,
    },
   },
   {
    Value: "^.*\\/test\\/.*$",
    Ref: arch.Reference{
     File: "/conf.yml",
     Line: 18,
     Column: 7,
     XPath: "$.exclude.files[1]",
     Valid: true,
    },
   },
  },
 },
 Components: models.ConfigComponents{
  Map: arch.RefMap[arch.ComponentName,internal/models.ConfigComponent]{
   values: map[arch.ComponentName]models.ConfigComponent{
    "main": {
     In: arch.RefSlice[arch.PathRelativeGlob]{
      {
       Value: "app",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 29,
        Column: 30,
        XPath: "$.components.main.in",
        Valid: true,
       },
      },
     },
    },
    "models": {
     In: arch.RefSlice[arch.PathRelativeGlob]{
      {
       Value: "dto/*",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 30,
        Column: 32,
        XPath: "$.components.models.in[0]",
        Valid: true,
       },
      },
      {
       Value: "models/**",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 30,
        Column: 39,
        XPath: "$.components.models.in[1]",
        Valid: true,
       },
      },
     },
    },
   },
   refs: map[arch.ComponentName]arch.Reference{
    "main": {
     File: "/conf.yml",
     Line: 29,
     Column: 24,
     XPath: "$.components.main",
     Valid: true,
    },
    "models": {
     File: "/conf.yml",
     Line: 30,
     Column: 24,
     XPath: "$.components.models",
     Valid: true,
    },
   },
  },
 },
 Vendors: models.ConfigVendors{
  Map: arch.RefMap[arch.VendorName,internal/models.ConfigVendor]{
   values: map[arch.VendorName]models.ConfigVendor{
    "3rd-graph": {
     In: arch.RefSlice[arch.PathImportGlob]{
      {
       Value: "oss.terrastruct.com/d2/**",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 22,
        Column: 30,
        XPath: "$.vendors.3rd-graph.in",
        Valid: true,
       },
      },
     },
    },
    "3rd-yaml": {
     In: arch.RefSlice[arch.PathImportGlob]{
      {
       Value: "github.com/goccy/go-yaml",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 25,
        Column: 9,
        XPath: "$.vendors.3rd-yaml.in[0]",
        Valid: true,
       },
      },
      {
       Value: "github.com/fe3dback/go-yaml",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 26,
        Column: 9,
        XPath: "$.vendors.3rd-yaml.in[1]",
        Valid: true,
       },
      },
     },
    },
    "go-ast": {
     In: arch.RefSlice[arch.PathImportGlob]{
      {
       Value: "golang.org/x/mod/modfile",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 21,
        Column: 32,
        XPath: "$.vendors.go-ast.in[0]",
        Valid: true,
       },
      },
      {
       Value: "golang.org/x/tools/go/packages",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 21,
        Column: 58,
        XPath: "$.vendors.go-ast.in[1]",
        Valid: true,
       },
      },
     },
    },
   },
   refs: map[arch.VendorName]arch.Reference{
    "3rd-graph": {
     File: "/conf.yml",
     Line: 22,
     Column: 24,
     XPath: "$.vendors.3rd-graph",
     Valid: true,
    },
    "3rd-yaml": {
     File: "/conf.yml",
     Line: 24,
     Column: 7,
     XPath: "$.vendors.3rd-yaml",
     Valid: true,
    },
    "go-ast": {
     File: "/conf.yml",
     Line: 21,
     Column: 24,
     XPath: "$.vendors.go-ast",
     Valid: true,
    },
   },
  },
 },
 CommonComponents: arch.RefSlice[arch.ComponentName]{
  {
   Value: "models",
   Ref: arch.Reference{
    File: "/conf.yml",
    Line: 37,
    Column: 3,
    XPath: "$.commonComponents",
    Valid: true,
   },
  },
 },
 CommonVendors: arch.RefSlice[arch.VendorName]{
  {
   Value: "go-common",
   Ref: arch.Reference{
    File: "/conf.yml",
    Line: 33,
    Column: 5,
    XPath: "$.commonVendors[0]",
    Valid: true,
   },
  },
  {
   Value: "3rd-graph",
   Ref: arch.Reference{
    File: "/conf.yml",
    Line: 34,
    Column: 5,
    XPath: "$.commonVendors[1]",
    Valid: true,
   },
  },
 },
 Dependencies: models.ConfigDependencies{
  Map: arch.RefMap[arch.ComponentName,internal/models.ConfigComponentDependencies]{
   values: map[arch.ComponentName]models.ConfigComponentDependencies{
    "container": {
     MayDependOn: arch.RefSlice[arch.ComponentName]{
      {
       Value: "operations",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 48,
        Column: 9,
        XPath: "$.dependencies.container.mayDependOn[0]",
        Valid: true,
       },
      },
      {
       Value: "services",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 49,
        Column: 9,
        XPath: "$.dependencies.container.mayDependOn[1]",
        Valid: true,
       },
      },
      {
       Value: "view",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 50,
        Column: 9,
        XPath: "$.dependencies.container.mayDependOn[2]",
        Valid: true,
       },
      },
     },
     CanUse: arch.RefSlice[arch.VendorName]{
     },
     AnyVendorDeps: arch.Ref[bool]{
      Value: true,
      Ref: arch.Reference{
       File: "/conf.yml",
       Line: 45,
       Column: 20,
       XPath: "$.dependencies.container.anyVendorDeps",
       Valid: true,
      },
     },
     AnyProjectDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "/conf.yml",
       Line: 46,
       Column: 21,
       XPath: "$.dependencies.container.anyProjectDeps",
       Valid: true,
      },
     },
     CanContainTags: arch.RefSlice[arch.StructTag]{
     },
     DeepScan: models.ConfigOptional[arch.Ref[bool]]{
      Value: arch.Ref[bool]{
       Value: false,
       Ref: arch.Reference{
        File: "",
        Line: 0,
        Column: 0,
        XPath: "",
        Valid: false,
       },
      },
      Defined: false,
     },
    },
    "main": {
     MayDependOn: arch.RefSlice[arch.ComponentName]{
      {
       Value: "container",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 42,
        Column: 7,
        XPath: "$.dependencies.main.mayDependOn",
        Valid: true,
       },
      },
     },
     CanUse: arch.RefSlice[arch.VendorName]{
     },
     AnyVendorDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     AnyProjectDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     CanContainTags: arch.RefSlice[arch.StructTag]{
     },
     DeepScan: models.ConfigOptional[arch.Ref[bool]]{
      Value: arch.Ref[bool]{
       Value: false,
       Ref: arch.Reference{
        File: "",
        Line: 0,
        Column: 0,
        XPath: "",
        Valid: false,
       },
      },
      Defined: false,
     },
    },
    "operations": {
     MayDependOn: arch.RefSlice[arch.ComponentName]{
      {
       Value: "services",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 54,
        Column: 7,
        XPath: "$.dependencies.operations.mayDependOn",
        Valid: true,
       },
      },
     },
     CanUse: arch.RefSlice[arch.VendorName]{
      {
       Value: "3rd-graph",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 56,
        Column: 7,
        XPath: "$.dependencies.operations.canUse",
        Valid: true,
       },
      },
     },
     AnyVendorDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     AnyProjectDeps: arch.Ref[bool]{
      Value: false,
      Ref: arch.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     CanContainTags: arch.RefSlice[arch.StructTag]{
      {
       Value: "db",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 58,
        Column: 9,
        XPath: "$.dependencies.operations.canContainTags[0]",
        Valid: true,
       },
      },
      {
       Value: "bd",
       Ref: arch.Reference{
        File: "/conf.yml",
        Line: 59,
        Column: 9,
        XPath: "$.dependencies.operations.canContainTags[1]",
        Valid: true,
       },
      },
     },
     DeepScan: models.ConfigOptional[arch.Ref[bool]]{
      Value: arch.Ref[bool]{
       Value: false,
       Ref: arch.Reference{
        File: "",
        Line: 0,
        Column: 0,
        XPath: "",
        Valid: false,
       },
      },
      Defined: false,
     },
    },
   },
   refs: map[arch.ComponentName]arch.Reference{
    "container": {
     File: "/conf.yml",
     Line: 45,
     Column: 18,
     XPath: "$.dependencies.container",
     Valid: true,
    },
    "main": {
     File: "/conf.yml",
     Line: 41,
     Column: 16,
     XPath: "$.dependencies.main",
     Valid: true,
    },
    "operations": {
     File: "/conf.yml",
     Line: 53,
     Column: 16,
     XPath: "$.dependencies.operations",
     Valid: true,
    },
   },
  },
 },
}
